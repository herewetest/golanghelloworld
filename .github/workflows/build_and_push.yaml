name: Build and Push Docker Image

on:
  push:
    tags:
      - "*"

permissions:
  contents: read
  packages: write

jobs:
  check_quality:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check formatting w/ gofmt
        run: |
          gofmt -l -s -w .
          git diff --exit-code

      - name: Run go vet
        run: |
          go vet ./...

      - name: Run Gosec Security Scanner
        uses: securego/gosec@v2.20.0
        env:
          GOROOT: ""
        with:
          args: ./...

      - name: Run staticcheck
        uses: dominikh/staticcheck-action@v1
        with:
          version: "latest"

      - name: Run govulncheck
        run: |
          # Install govulncheck
          go install golang.org/x/vuln/cmd/govulncheck@latest
          # Update path
          export PATH="$(go env GOPATH)/bin:$PATH"
          # Replace go version in go.mod otherwise govulncheck freaks out
          sed -i 's/^go .*$/go 1.18.0/' go.mod
          govulncheck ./...

  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Test code
        run: go test ./...

  build-and-push:
    runs-on: ubuntu-latest
    needs:
      - check_quality
      - test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and push Docker image
        run: |
          echo "Checking that ${{ github.ref_name }} starts with 'v' and then a valid semver number"
          echo "${{ github.ref_name }}" | grep -Eq "^v[0-9]+\.[0-9]+\.[0-9]+$"
          TAGNAME=$(echo "${{ github.ref_name }}" | sed "s/^v\([0-9]\)/\1/")
          docker build -t ghcr.io/${{ github.repository_owner }}/${{ github.repository }}:$TAGNAME .
          docker push ghcr.io/${{ github.repository }}:$TAGNAME
